rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================
    // Users Collection
    // =================================
    match /users/{userId} {
      // Allow users to create their own profile during registration
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow users to read and update their own profile data
      allow read, update: if request.auth != null && request.auth.uid == userId;

      // Allow admins to read and write any user profile
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // =================================
    // User-Owned Collections (READ ONLY for users)
    // =================================
    // Users can only READ their own data, NOT create
    match /cashbackTransactions/{docId} {
      // Users can only read their own cashback transactions
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Only admins can create/write cashback transactions
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    match /tradingAccounts/{docId} {
      // Users can create their own trading account requests
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Users can read their own trading accounts
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Admins can read/write any trading account
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    match /withdrawals/{docId} {
      // Users can create their own withdrawal requests
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Users can read their own withdrawals
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Admins can read/write any withdrawal
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    match /orders/{docId} {
      // Users can create their own orders
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Users can read their own orders
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Admins can read/write any order
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    match /notifications/{docId} {
      // Users cannot create notifications (server-side only)
      allow create: if false;
      
      // Users can read and update (mark as read) their own notifications
      allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Admins can read/write any notification
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    match /feedbackResponses/{docId} {
      // Users can create their own feedback responses
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Users can read their own responses
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Admins can read/write any response
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // =================================
    // Public Read-Only Collections
    // =================================
    match /brokers/{docId} {
      allow read: if true;
      allow write, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /productCategories/{docId} {
      allow read: if true;
      allow write, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /products/{docId} {
      allow read: if true;
      allow write, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /clientLevels/{docId} {
      allow read: if true;
      allow write, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /blogPosts/{docId} {
      // Public can only read published posts
      allow read: if resource.data.status == 'published';
      
      // Admins can read all and write
      allow read, write, delete: if request.auth != null && request.auth.token.admin == true;
    }

    // =================================
    // Feedback Forms (Users can read active forms)
    // =================================
    match /feedbackForms/{docId} {
      // Users can read active feedback forms
      allow read: if request.auth != null && resource.data.status == 'active';
      
      // Admins can read/write all forms
      allow read, write, create, delete: if request.auth != null && request.auth.token.admin == true;
    }

    // =================================
    // Admin-Only Collections
    // =================================
    match /activityLogs/{docId} {
      allow read, write, create, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /adminNotifications/{docId} {
      allow read, write, create, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /counters/{docId} {
      // Counters are managed server-side only
      // Admin SDK will handle counter updates, no rules-based access needed
      allow read, write, create, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /settings/{docId} {
      // Settings can be read by anyone (for banner, etc.)
      allow read: if true;
      
      // Only admins can write settings
      allow write, create, delete: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
